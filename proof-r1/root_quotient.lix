# For a ≥ 0, b > 0: √(a/b) = √a / √b

# Proof that for a ≥ 0, b > 0: √(a/b) = √a / √b

# Define the square root function as per documentation
fn square_root(x R) R:
    dom:
        x >= 0
    then:
        square_root(x) * square_root(x) = x

# Given conditions
let a R:
    a >= 0
let b R:
    b > 0

# Both sides are well-defined since a/b ≥ 0 and b > 0
let L = square_root(a / b)
let R = square_root(a) / square_root(b)

# Both L and R are non-negative
know:
    L >= 0  # Square root returns non-negative values
    R >= 0  # Numerator ≥ 0, denominator > 0

# Compute squares of both sides
know:
    L * L = a / b  # By definition of square_root

know:
    square_root(a) * square_root(a) = a  # By square_root definition
    square_root(b) * square_root(b) = b  # By square_root definition

# Compute R²
know:
    R * R = (square_root(a) / square_root(b)) * (square_root(a) / square_root(b))
          = (square_root(a) * square_root(a)) / (square_root(b) * square_root(b))
          = a / b

# Thus L² = R²
know:
    L * L = R * R

# Since both L and R are non-negative and L² = R², we have L = R
know forall x R, y R:
    x >= 0
    y >= 0
    x * x = y * y
    then:
        x = y

# Apply to L and R
know:
    L = R

# Therefore √(a/b) = √a / √b
